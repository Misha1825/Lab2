//---------------------------------------------------------------------------

#ifndef Unit1H
#define Unit1H
//---------------------------------------------------------------------------
#include <System.Classes.hpp>
#include <Vcl.Controls.hpp>
#include <Vcl.StdCtrls.hpp>
#include <Vcl.Forms.hpp>
#include <iostream>
#include <string>
#include <cmath>
#include <stack>
#include <vector>
//---------------------------------------------------------------------------
class TForm1 : public TForm
{
__published:	// IDE-managed Components
	TEdit *Edit1;
	TEdit *Edit2;
	TButton *Button1;
	void __fastcall Button1Click(TObject *Sender);
private:	// User declarations
public:		// User declarations
	__fastcall TForm1(TComponent* Owner);
};
//---------------------------------------------------------------------------
extern PACKAGE TForm1 *Form1;
//---------------------------------------------------------------------------



std::stack<int> stack;
struct Pair {
    int first, second;
};
std::vector<Pair> pairs(std::string A) {
    std::vector<Pair> V;
    for(int i = 0; i < A.size(); ++i) {
        if(A[i] == '(') {
            stack.push(i);
        }
        if(A[i] == ')') {
            Pair P;
            P.first = stack.top();
            stack.pop();
            P.second = i;
            V.push_back(P);
        }
    }
    return V;
};
float calculate(std::string A) {
    using namespace std;
    string B;
    int a = 0, b = 1, c, d = 0, f = 0, g;
    //cin >> A;
    while (A[a]) {                                                                        // ¬ычисление количества чисел/знаков из примера (1)
        if (A[a] == '+' || A[a] == '-' || A[a] == '*' || A[a] == '/' || A[a] == '^') {    // b - количество чисел, b-1 - количество знаков
            b++;
        }
        a++;
    }
    //cout << b << ' ' << "(1)" << endl;

    float M[b];               // ¬ычисление массива из чисел примера (2)
    for (c = 0; c < b; c++) {
        while (A[d] && A[d] != '+' && A[d] != '-' && A[d] != '*' && A[d] != '/' && A[d] != '^') {
            B[f] = A[d];
            d++;
            f++;
        }
        M[c] = atof(B.c_str());
        for (g = 0; g < f; g++) { B[g] = 0; }
        d++;
        f = 0;
    }
    c = 0;
    while (c < b) {
        // cout << M[c] << ' ';
        c++;
    }
    //cout << "(2)" << endl;

    string C;         // ¬ычисление строки string из знаков примера (3)
    int l = 0, m = 0;
    while (A[l]) {
        if (A[l] == '+' || A[l] == '-' || A[l] == '*' || A[l] == '/' || A[l] == '^') {
            C[m] = A[l];
            m++;
        }
        l++;
    }
    m = 0;
    while (m < b - 1) {
        //cout << C[m] << ' ';
        m++;
    }
    //cout << ' ' << "(3)" << endl;

    int z1 = 0, x1;           // Ѕлок кода, отвечающий за вычисление ответа с учЄтом приоритета знаков
    while (C[z1]) {
        if (C[z1] == '^') {
            M[z1] = pow(M[z1], M[z1 + 1]);
            for (x1 = z1; x1 < b - 1; x1++) { C[x1] = C[x1 + 1]; }
            for (x1 = z1 + 1; x1 < b; x1++) { M[x1] = M[x1 + 1]; }
            z1 = 0;
            b = b - 1;
        } else { z1++; }
    }
    z1 = 0;
    while (C[z1]) {
        if (C[z1] == '*' || C[z1] == '/') {
            switch (C[z1]) {
                case '*': {
                    M[z1] = M[z1] * M[z1 + 1];
                    for (x1 = z1; x1 < b - 1; x1++) { C[x1] = C[x1 + 1]; }
                    for (x1 = z1 + 1; x1 < b; x1++) { M[x1] = M[x1 + 1]; }
                    z1 = 0;
                    b = b - 1;
                    break;
                }
                case '/': {
                    if (M[z1 + 1] != 0) {
                        M[z1] = M[z1] / M[z1 + 1];
                        for (x1 = z1; x1 < b - 1; x1++) { C[x1] = C[x1 + 1]; }
                        for (x1 = z1 + 1; x1 < b; x1++) { M[x1] = M[x1 + 1]; }
                        z1 = 0;
                        b = b - 1;
					} else {
						ShowMessage("Ќа 0 делить нельз€!");
                    }
                }
            }
        } else { z1++; }
    }
    z1 = 0;
    while (C[z1]) {
        if (C[z1] == '-' || C[z1] == '+') {
            switch (C[z1]) {
                case '-': {
                    M[z1] = M[z1] - M[z1 + 1];
                    for (x1 = z1; x1 < b - 1; x1++) { C[x1] = C[x1 + 1]; }
                    for (x1 = z1 + 1; x1 < b; x1++) { M[x1] = M[x1 + 1]; }
                    z1 = 0;
                    b = b - 1;
                    break;
                }
                case '+': {
                    M[z1] = M[z1] + M[z1 + 1];
                    for (x1 = z1; x1 < b - 1; x1++) { C[x1] = C[x1 + 1]; }
                    for (x1 = z1 + 1; x1 < b; x1++) { M[x1] = M[x1 + 1]; }
                    z1 = 0;
                    b = b - 1;
                    break;
                }
            }
        } else { z1++; }
    }
    //cout<<M[0]<<endl;
    return M[0];
}

#endif
